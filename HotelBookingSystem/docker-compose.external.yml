services:
  # API Gateway Service
  api-gateway:
    build:
      context: .
      dockerfile: src/ApiGateway/HotelBooking.ApiGateway/Dockerfile
    container_name: hotel-booking-api-gateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_HTTPS_PORT=
      - HTTPS_PORT=
      - ConnectionStrings__DefaultConnection=Server=hotel-booking-server.database.windows.net;Database=hotel-booking-db;User Id=dbadmin;Password=HotelBooking1234;TrustServerCertificate=true;Encrypt=true;
      - ServiceUrls__BookingService=http://booking-service:80
      - ServiceUrls__AnalyticsService=http://analytics-service:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
    # Remove direct port mapping - nginx will handle this
    expose:
      - "80"
    depends_on:
      - booking-service
      - analytics-service
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # Booking Service
  booking-service:
    build:
      context: .
      dockerfile: src/Services/HotelBooking.BookingService/Dockerfile
    container_name: hotel-booking-booking-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=hotel-booking-server.database.windows.net;Database=hotel-booking-db;User Id=dbadmin;Password=HotelBooking1234;TrustServerCertificate=true;Encrypt=true;
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
    # Remove direct port mapping - nginx will handle this
    expose:
      - "80"
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: src/Services/HotelBooking.AnalyticsService/Dockerfile
    container_name: hotel-booking-analytics-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=hotel-booking-server.database.windows.net;Database=hotel-booking-db;User Id=dbadmin;Password=HotelBooking1234;TrustServerCertificate=true;Encrypt=true;
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
    # Remove direct port mapping - nginx will handle this
    expose:
      - "80"
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./hotel-booking-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://172.214.136.108
    container_name: hotel-booking-frontend
    environment:
      - REACT_APP_API_URL=https://172.214.136.108
    # Remove direct port mapping - nginx will handle this
    expose:
      - "80"
    depends_on:
      - api-gateway
    networks:
      - hotel-booking-network
    restart: unless-stopped

  # Nginx Reverse Proxy for external access with HTTPS
  nginx:
    image: nginx:alpine
    container_name: hotel-booking-nginx
    ports:
      - "80:80"     # HTTP (redirects to HTTPS)
      - "443:443"   # HTTPS
    volumes:
      - ./nginx-external.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api-gateway
    networks:
      - hotel-booking-network
    restart: unless-stopped

networks:
  hotel-booking-network:
    driver: bridge
